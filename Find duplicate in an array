public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int repeatedNumber(final List<Integer> A) {
        HashMap<Integer,Integer> map=new HashMap<>();
        int k=0;
        for(int i=0;i<A.size();i++)
        {
            if(map.containsKey(A.get(i)))
           {
               k=A.get(i);
               break;
           }
           else
           map.put(A.get(i),1);
        }
        if(k==0)
        return -1;
        else
        return k;
    }
}





If the numbers in the array are from 1 to n
public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int repeatedNumber(final int[] A) {
        for (int i = 0; i < A.length; i++) {
        int abs1=Math.abs(A[i]);
        if(A[abs1]>=0){
            A[abs1]=-A[abs1];
        }
        else return abs1;
    }
    }
}



Link : https://www.interviewbit.com/problems/find-duplicate-in-array/
