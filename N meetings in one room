class Solution 
{
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    public static int maxMeetings(int start[], int end[], int n)
    {
        // add your code here
        ArrayList<ArrayList<Integer>> arr=new ArrayList<>();
        for(int i=0;i<n;i++){
            ArrayList<Integer> a=new ArrayList<>();
            a.add(start[i]);
            a.add(end[i]);
            arr.add(a);
        }
        Collections.sort(arr,new Comparator<>(){
            public int compare(ArrayList<Integer> a1,ArrayList<Integer> a2){
                return a1.get(1)-a2.get(1);
            }
        });
        int c=1;
        int time=arr.get(0).get(1),t=1;
        while(t<n){
            if(arr.get(t).get(0)>time){
                c++;
                time=arr.get(t).get(1);
            }
            t++;
        }
        return c;
    }
}



LINK : https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1
